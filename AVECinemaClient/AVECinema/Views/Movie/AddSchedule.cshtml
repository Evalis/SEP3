@model AVECinema.cinema.schedule

@{
    ViewBag.Title = "AddSchedule";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Add Schedule</h2>

@if (ViewBag.scheduleOverlap != null)
{
    <h4 class="text-danger">@ViewBag.scheduleOverlap</h4>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <input type="hidden" value="@ViewBag.movieID" name="movieID" id="movieID" />
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.roomNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.roomNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.roomNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.startTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.startTime, new { htmlAttributes = new { @class = "form-control", @type = "time", @step = "2" } })
                @Html.ValidationMessageFor(model => model.startTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.endTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.endTime, new { htmlAttributes = new { @class = "form-control", @type = "time", @step = "2" } })
                @Html.ValidationMessageFor(model => model.endTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add new Schedule" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
